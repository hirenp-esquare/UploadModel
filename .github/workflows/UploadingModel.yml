# This is a basic workflow to help you get started with Actions

name: UploadModel

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ main ]
    #paths:
    #- '**.mdl'
  #pull_request:
    #branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  getFileJ:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest #windows-latest #ubuntu-latest
    outputs:
      outputFile: ${{ steps.getfile.outputs.files }}
      #output2: ${{ steps.step2.outputs.test }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
         fetch-depth: "0"

      - id: changedFiles
        uses: jitterbit/get-changed-files@v1

      - name: '' #get changed files
        id: getfile
        run: |
          chmod +x .github/workflows/changedFilesFilter.sh
          awk '{ sub("\r$", ""); print }' .github/workflows/changedFilesFilter.sh > .github/workflows/changedFilesFilter2.sh
          mv .github/workflows/changedFilesFilter2.sh .github/workflows/changedFilesFilter.sh
          chmod +x .github/workflows/changedFilesFilter.sh
          echo "::set-output name=files::$(.github/workflows/changedFilesFilter.sh "${{ steps.changedFiles.outputs.added_modified }}")"

      - name: echo output
        run: |
         echo ${{ steps.getfile.outputs.files }}
         
         
   
    
  
  
     
  
    
